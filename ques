
**1. Accessing s3 from ec2 using aws cli without access and secret key?**
Using IAM roles we can achiev this
Create IAM role for ec2 with policy to access s3 
By doing above we don'nt need to configure access and secret key

**2. What is IAM role and its used for?**
A role describes the permissions to access resources.
By doing this, the applications or services assume the role (permissions) at run time. This means that AWS is providing to the application or the user temporary security credentials that can be used whenever they need access to those resources.
IAM roles are designed so that our applications can securely make API requests from our instances, without requiring us to manage the security credentials that the applications use. Instead of creating and distributing our AWS credentials, we delegate permission to make API requests using IAM roles as follows:


**3. RDS Multi AZ vs Read Replica:**
Multi-AZ deployment is a AWS managed offering where you get hot-standby replica of your RDS in a different Availability Zone which will substitute automatically your master/primary database in case of its maintenance, failure or AZ failure
One very important thing to note here is we canâ€™t access the other instance (standby instanace) prior to the failover. Only a failure of primary database will make the standby available for use. So basically it maintains database availability against failure.

In case we need to offload the primary database we need to use Read-Replica. This is done manually by right clicking on DB instance. Once a Read-Replica is created, after a few minutes (or more depending on the storage size) it will be ready to accept connections from authorized users depending on Security Groups.
Once created we can use this new instance mainly for performance and backups:
By diverting read queries (select statement) to replicas, keeping in mind the replica lag, we can easily scale out our application.
We can also use the Read Replica as a failover instance. In case of failure you need to manually make the read Replica to a primary.
To decrease the risk of a single AWS Availability Zone failure we should deploy the Read Replica in a different AZ respect to the master instance.
Main difference here is Multi-AZ is purely backup and recovery option. Its totally automated and managed by AWS. There is no lag in this case. While read replica is manual and it can be used for performance as well. There is slight lag in here.


**4. What is connection draining in ELB?**
Enabling connection draining feature in a load balancer makes sure that any back-end instances you have deregistered will complete requests in progress before the deregistration process starts. Also, if a back-end instance fails to keep up with the recommended health checks, then the load balancer does not send any new requests to the unhealthy instance. Although it will still allow existing requests to complete.
AWS ELB connection draining prevents breaking open network connections while taking an instance out of service, updating its software, or replacing it with a fresh instance that contains updated software. Connection draining avoids the situation of broken connection being displayed as a half-drawn web page, an aborted file download, or a failed web service call. It is recommended that connection draining should be enabled for your Elastic Load Balancers to ensure fault tolerance in your cloud infra.
Centilytics provides an insight which warns the user whenever a load balancer with disabled connection draining is detected.
Enabling this feature will allow better management of the resources behind the Elastic Load Balancer, such as replacing backend instances without impacting the user experience. For example, taking an instance out of service and replacing it with a fresh EC2 instance that contains updated software, while avoid breaking open network connections.

**5. Application Deployment types**
  Blue/Green deployment
  Rolling deployment
  Canary deployment
  Recreate deployment
  A/B deployment
  
https://dev.to/mostlyjason/intro-to-deployment-strategies-blue-green-canary-and-more-3a3
https://medium.com/@cgrant/deployment-strategies-release-best-practices-6e557c3f39b4



